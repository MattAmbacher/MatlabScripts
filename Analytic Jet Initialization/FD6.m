function du = FD6(u, bc, dx)
%returns 5th order forward difference first derivative
%input:
%	u - input scalar/vector field
%	bc - Boundary Conditons
%		1 - period
%		2 - symmetric

du = zeros(size(u));
J = size(u,2);
L = size(u,1);
if (bc == 1)
    du(:,1,:) = 1/dx * ( -1/60 * u(:,J-3,:) + 3/20 * u(:,J-2,:) - 3/4 * u(:,J-1,:) + 3/4 * u(:,2,:) - 3/20 * u(:,3,:) + 1/60 * u(:,4,:) );
    du(:,2,:) = 1/dx * ( -1/60 * u(:,J-2,:) + 3/20 * u(:,J-1,:) - 3/4 * u(:,1,:) + 3/4 * u(:,3,:) - 3/20 * u(:,4,:) + 1/60 * u(:,4,:) );
    du(:,3,:) = 1/dx * ( -1/60 * u(:,J-1,:) + 3/20 * u(:,1,:) - 3/4 * u(:,2,:) + 3/4 * u(:,4,:) - 3/20 * u(:,5,:) + 1/60 * u(:,4,:) );
    for j=4:J-3
       du(:,j,:) = 1/dx * (-1/60 * u(:,j-3,:) + 3/20 * u(:,j-2,:) - 3/4 * u(:,j-1,:) + 3/4 * u(:,j+1,:) - 3/20 * u(:,j+2,:) + 1/60 * u(:,j+3,:) );
    end
    du(:,J-2,:) = 1/dx * ( -1/60 * u(:,J-5,:) + 3/20 * u(:,J-4,:) - 3/4 * u(:,J-3,:) + 3/4 * u(:,J-1,:) - 3/20 * u(:,1,:) + 1/60 * u(:,2,:) );
    du(:,J-1,:) = 1/dx * ( -1/60 * u(:,J-4,:) + 3/20 * u(:,J-3,:) - 3/4 * u(:,J-2,:) + 3/4 * u(:,1,:) - 3/20 * u(:,2,:) + 1/60 * u(:,3,:) );
    du(:,J,:) = 1/dx * ( -1/60 * u(:,J-3,:) + 3/20 * u(:,J-2,:) - 3/4 * u(:,J-1,:) + 3/4 * u(:,2,:) - 3/20 * u(:,3,:) + 1/60 * u(:,4,:) );
    
elseif (bc == 2)
    du(1,:,:) = 1/dx * ( -1/60 * (-u(4,:,:)) + 3/20 * (-u(3,:,:)) - 3/4 * (-u(2,:,:)) + 3/4 * u(2,:,:) - 3/20 * u(3,:,:) + 1/60 * u(4,:,:) );
    du(2,:,:) = 1/dx * ( -1/60 * (-u(3,:,:)) + 3/20 * (-u(2,:,:)) - 3/4 * u(1,:,:) + 3/4 * u(3,:,:) - 3/20 * u(4,:,:) + 1/60 * u(5,:,:) );
    du(3) = 1/dx * ( -1/60 * (-u(2)) + 3/20 * u(1) - 3/4 * u(2) + 3/4 * u(4) - 3/20 * u(5) + 1/60 * u(6) );
    for j=4:L-3
        du(j) = 1/dx * (-1/60 * u(j-3) + 3/20 * u(j-2) - 3/4 * u(j-1) + 3/4 * u(j+1) - 3/20 * u(j+2) + 1/60 * u(j+3) );
    end
    du(L-2,:,:) = 1/dx * ( -1/60 * u(L-5,:,:) + 3/20 * u(L-4,:,:) - 3/4 * u(L-3,:,:) + 3/4 * u(L-1,:,:) - 3/20 * u(L,:,:) + 1/60 * (-u(L-1,:,:)) );
    du(L-1,:,:) = 1/dx * ( -1/60 * u(L-4,:,:) + 3/20 * u(L-3,:,:) - 3/4 * u(L-2,:,:) + 3/4 * u(L,:,:) - 3/20 * (-u(L-1,:,:)) + 1/60 * (-u(L-2,:,:) ));
    du(L,:,:) = 1/dx * ( -1/60 * u(L-3,:,:) + 3/20 * u(L-2,:,:) - 3/4 * u(L-1,:,:) + 3/4 * (-u(L-1,:,:)) - 3/20 * (-u(L-2,:,:)) + 1/60 * (-u(L-3,:,:)) );
else
    disp('Please set bc = 1 (periodic BC) or 2 (antisymmetric BC)');
end
